{"version":3,"file":"static/js/779.4ce20483.chunk.js","mappings":"sPAEaA,EAAYC,EAAAA,GAAAA,IAAH,iFAMTC,EAAgBD,EAAAA,GAAAA,IAAH,0CAIbE,EAAYF,EAAAA,GAAAA,GAAH,kNAUTG,EAAeH,EAAAA,GAAAA,EAAH,gSAWZI,EAAYJ,EAAAA,GAAAA,EAAH,gN,SCMtB,EAlCgB,WAEZ,OAA0BK,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAUR,IARAE,EAAAA,EAAAA,YAAU,WACN,KACIC,EAAAA,EAAAA,IAAWH,GAASI,MAAK,SAAAN,GAAK,OAAIC,EAASD,MAC7C,MAAOO,GACLC,QAAQC,IAAIF,MAEjB,CAACL,IAECF,EAIL,OACI,SAACP,EAAD,UACKO,EAAMU,QAAQC,OAAS,GACxB,8BACKX,EAAMU,QAAQE,KAAI,SAAAC,GAAM,OACrB,UAAClB,EAAD,YACI,SAACC,EAAD,UAAYiB,EAAOC,UACnB,SAACjB,EAAD,UAAegB,EAAOE,YAFNF,EAAOG,UAO3B,SAAClB,EAAD","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Container = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    gap: 8px;\n`;\n\nexport const ReviewWrapper = styled.div`\n    width: 100%;\n`;\n\nexport const AutorName = styled.h3`\n    color: #fff;\n    background-color: rgb(255 69 0);\n    border-top-left-radius: 4px;\n    border-top-right-radius: 4px;\n    font-size: 16px;\n    padding: 8px 8px;\n    margin: 0;\n`;\n\nexport const AutorContent = styled.p`\n    border-left: 1px solid rgb(255 69 0);\n    border-right: 1px solid rgb(255 69 0);\n    border-bottom: 1px solid rgb(255 69 0);\n    border-bottom-left-radius: 4px;\n    border-bottom-right-radius: 4px;\n    font-size: 16px;\n    padding: 8px;\n    margin: 0;\n`;\n\nexport const NoReviews = styled.p`\n    text-align: center;\n    width: 100%;\n    color: #fff;\n    background-color: rgb(255 69 0);\n    border-radius: 4px;\n    font-size: 16px;\n    padding: 12px 0;\n    margin: 0;\n`;","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getReviews } from \"../../services/moviesApi\";\nimport { Container, ReviewWrapper, AutorName, AutorContent, NoReviews } from \"./Reviews.styled\";\n\nconst Reviews = () => {\n\n    const [movie, setMovie] = useState(null);\n    const { movieId } = useParams();\n\n    useEffect(() => {\n        try {\n            getReviews(movieId).then(movie => setMovie(movie));\n        } catch (error) {\n            console.log(error);\n        }\n    }, [movieId]);\n\n    if (!movie) {\n        return;\n    }\n\n    return (\n        <Container>\n            {movie.results.length > 0 ? (\n            <>\n                {movie.results.map(review => (\n                    <ReviewWrapper key={review.id}>\n                        <AutorName>{review.author}</AutorName>\n                        <AutorContent>{review.content}</AutorContent>\n                    </ReviewWrapper>\n                ))}\n            </>\n            ) : (\n                    <NoReviews>No reviews :(</NoReviews>\n            )}\n        </Container>\n    );\n}\nexport default Reviews;"],"names":["Container","styled","ReviewWrapper","AutorName","AutorContent","NoReviews","useState","movie","setMovie","movieId","useParams","useEffect","getReviews","then","error","console","log","results","length","map","review","author","content","id"],"sourceRoot":""}