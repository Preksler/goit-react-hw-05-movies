{"version":3,"file":"static/js/140.ef0b0246.chunk.js","mappings":"yQAGaA,GAAWC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,4P,SCDRE,EAAW,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,SAC7B,OACE,SAACL,EAAD,CAAUI,GAAIA,EAAd,SACGC,KCFMC,EAAYL,EAAAA,GAAAA,IAAH,oIAOTM,EAAaN,EAAAA,GAAAA,IAAH,0IAQVO,EAAYP,EAAAA,GAAAA,GAAH,2HAQTQ,EAAYR,EAAAA,GAAAA,EAAH,kJASTS,EAAmBT,EAAAA,GAAAA,EAAH,2HAQhBU,EAAUV,EAAAA,GAAAA,IAAH,wJASPW,EAAiBX,EAAAA,GAAAA,IAAH,+DAKdY,EAAiBZ,EAAAA,GAAAA,EAAH,2DAKda,GAAiBb,EAAAA,EAAAA,IAAOc,EAAAA,GAAPd,CAAH,wQCS3B,EAvDkB,WAAO,IAAD,IACde,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KAEMC,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAU7C,IARAC,EAAAA,EAAAA,YAAU,WACR,KACEC,EAAAA,EAAAA,IAAaV,GAASW,MAAK,SAAAR,GAAK,OAAIC,EAASD,MAC7C,MAAOS,GACPC,QAAQC,IAAIF,MAEb,CAACZ,IAECG,EAIL,OACE,4BACGA,IACC,iCACE,SAAChB,EAAD,CAAUC,GAAIiB,EAAd,sBACA,4BACE,SAAC,EAAAU,SAAD,CAAUC,UAAU,wCAApB,UACE,UAAC1B,EAAD,YACE,0BACE,SAACC,EAAD,CAAY0B,IAAG,yCAAoCd,EAAMe,aAAeC,IAAKhB,EAAMiB,MAAOC,MAAM,WAElG,4BACE,UAAC7B,EAAD,WAAYW,EAAMiB,MAAlB,KAA2B,IAAIE,KAAKnB,EAAMoB,cAAcC,cAAxD,QACA,UAAC/B,EAAD,0BAAwBgC,KAAKC,MAA6B,GAAtBvB,EAAMwB,cAA1C,SACA,SAAClC,EAAD,wBACA,SAACC,EAAD,UAAmBS,EAAMyB,YACzB,SAACnC,EAAD,sBACA,SAACC,EAAD,UAAmBS,EAAM0B,OAAOC,KAAI,SAAAC,GAAK,OAAKA,EAAMC,KAAO,kBAIjE,UAACrC,EAAD,YACE,SAACE,EAAD,sCACA,UAACD,EAAD,YACE,SAACE,EAAD,CAAgBV,GAAG,OAAnB,mBACA,SAACU,EAAD,CAAgBV,GAAG,UAAnB,kCAMV,SAAC,EAAA2B,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD","sources":["components/BackLink/BackLink.styled.js","components/BackLink/BackLink.jsx","pages/MovieInfo/MovieInfo.styled.js","pages/MovieInfo/MovieInfo.jsx"],"sourcesContent":["import styled from \"styled-components\";\nimport { Link } from 'react-router-dom';\n\nexport const LinkBack = styled(Link)`\n    display: block;\n    text-decoration: none;\n    color: #000;\n    font-size: 16px;\n    font-weight: 700;\n    padding: 0 8px;\n    margin: 0;\n    margin-bottom: 16px;\n    &:hover {\n        color: rgb(255 69 0);\n    }\n`;\n","import { LinkBack } from './BackLink.styled';\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <LinkBack to={to}>\n      {children}\n    </LinkBack>\n  );\n};","import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const Container = styled.div`\n    border: 1px solid rgb(255 69 0);\n    border-radius: 4px;\n    display: flex;\n    margin-bottom: 8px;\n`;\n\nexport const MovieImage = styled.img`\n    display: block;\n    width: 300px;\n    border-radius: 4px;\n    object-fit: cover;\n    margin-right: 16px;\n`;\n\nexport const MovieName = styled.h1`\n    color: #000;\n    font-size: 22px;\n    padding: 0;\n    margin: 0;\n    margin-bottom: 16px;\n`;\n\nexport const MovieText = styled.p`\n    color: #000;\n    font-size: 18px;\n    font-weight: 700;\n    padding: 0;\n    margin: 0;\n    margin-bottom: 16px;\n`;\n\nexport const MovieDescription = styled.p`\n    color: #000;\n    font-size: 16px;\n    padding: 0;\n    margin: 0;\n    margin-bottom: 16px;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: 12px;\n  margin: 0;\n  margin-bottom: 8px;\n`;\n\nexport const AdditionalList = styled.div`\n  display: flex;\n  list-style: none;\n`;\n\nexport const AdditionalText = styled.p`\n  font-weight: 700;\n  margin: 0;\n`;\n\nexport const AdditionalLink = styled(NavLink)`\n  padding: 8px 16px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: black;\n  font-weight: 500;\n\n  &.active {\n    color: white;\n    background-color: orangered;\n  }\n\n  :hover:not(.active) {\n    color: orangered;\n    }\n`;","import { useEffect, useState, Suspense } from 'react';\nimport { useParams, useLocation, Outlet } from 'react-router-dom';\nimport { getMovieById } from 'services/moviesApi';\nimport { BackLink } from '../../components/BackLink/BackLink';\nimport {\n  Container,\n  MovieImage,\n  MovieName,\n  MovieDescription,\n  MovieText,\n  Wrapper,\n  AdditionalList,\n  AdditionalText,\n  AdditionalLink\n} from '../MovieInfo/MovieInfo.styled';\n\nconst MovieInfo = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? \"/\";\n\n  useEffect(() => {\n    try {\n      getMovieById(movieId).then(movie => setMovie(movie));\n    } catch (error) {\n      console.log(error);\n    }\n  }, [movieId]);\n\n  if (!movie) {\n    return;\n  }\n  \n  return (\n    <main>\n      {movie && (\n        <>\n          <BackLink to={backLinkHref}>Go back</BackLink>\n          <div>\n            <Suspense fallback={<div>Loading...</div>}>\n              <Container>\n                <div>\n                  <MovieImage src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`} alt={movie.title} width=\"300\" />\n                </div>\n                <div>\n                  <MovieName>{movie.title} ({new Date(movie.release_date).getFullYear()})</MovieName>\n                  <MovieText>User Score: {Math.round((movie.vote_average) * 10)}% </MovieText>\n                  <MovieText>Overview</MovieText>\n                  <MovieDescription>{movie.overview}</MovieDescription>\n                  <MovieText>Ganres</MovieText>\n                  <MovieDescription>{movie.genres.map(genre => (genre.name + ' '))}</MovieDescription>\n                </div>\n              </Container>\n            </Suspense>\n            <Wrapper>\n              <AdditionalText>Additional information</AdditionalText>\n              <AdditionalList>\n                <AdditionalLink to=\"cast\">Cast</AdditionalLink>\n                <AdditionalLink to=\"reviews\">Reviews</AdditionalLink>\n              </AdditionalList>\n            </Wrapper>\n        </div>\n        </>\n      )}\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </main>\n  );\n}\nexport default MovieInfo;"],"names":["LinkBack","styled","Link","BackLink","to","children","Container","MovieImage","MovieName","MovieText","MovieDescription","Wrapper","AdditionalList","AdditionalText","AdditionalLink","NavLink","movieId","useParams","useState","movie","setMovie","backLinkHref","useLocation","state","from","useEffect","getMovieById","then","error","console","log","Suspense","fallback","src","poster_path","alt","title","width","Date","release_date","getFullYear","Math","round","vote_average","overview","genres","map","genre","name"],"sourceRoot":""}